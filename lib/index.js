// Generated by CoffeeScript 1.7.1

/*
 * gama-sign main
 * User YuanXiangDong
 * date 2014-06-13 10:50:00
 */

(function() {
  var DEFAULT_IGNORE_PARAMS, DEFAULT_OVER_MILLISECONDS, DEFAULT_SIGN_NAME, GamaSign, HTTP_METHODS, oauthSign, _;

  oauthSign = require("oauth-sign");

  _ = require('underscore');

  DEFAULT_OVER_MILLISECONDS = 1000 * 60 * 10;

  HTTP_METHODS = ['GET', 'POST', 'PUT', 'DELETE'];

  DEFAULT_SIGN_NAME = "sign";

  DEFAULT_IGNORE_PARAMS = [];

  GamaSign = {
    verifyTimestamp: function(timestamp, milliseconds) {
      if (timestamp == null) {
        return false;
      }
      milliseconds = parseInt(milliseconds || DEFAULT_OVER_MILLISECONDS);
      timestamp = parseInt(timestamp, 10);
      return new Date().getTime() < (timestamp + milliseconds);
    },
    makeSign: function(httpMethod, baseUri, params, ignoreParams, accessKeyId, accessKeySecret) {
      var sign;
      params = params || {};
      ignoreParams = ignoreParams || {};
      sign = oauthSign.hmacsign(httpMethod, baseUri, removeIgnoreParams(params, ignoreParams), accessKeyId, accessKeySecret);
      return sign;
    },
    verifyMethod: function(httpMethod) {
      return (httpMethod != null) && _.indexOf(HTTP_METHODS, httpMethod) !== -1;
    },
    removeIgnoreParams: function(params, ignoreParams) {
      var key, newParams, val, _i, _len;
      ignoreParams = ignoreParams || [];
      newParams = _.clone(params || {});
      for (val = _i = 0, _len = newParams.length; _i < _len; val = ++_i) {
        key = newParams[val];
        if (key === DEFAULT_SIGN_NAME || _.indexOf(ignoreParams, key) !== -1) {
          delete newParams[key];
        }
      }
      return newParams;
    }
  };

  module.exports = GamaSign;

}).call(this);
